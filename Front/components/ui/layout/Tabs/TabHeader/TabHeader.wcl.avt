import type { Tab } from "../Tab/Tab.wcl.avt";
import type { Tabs } from "../Tabs.wcl.avt";

namespace Components {
    @Storybook({
        export: 'public',
        group: 'Components/Layout'
    })
    export class TabHeader<T extends Tab = Tab> extends Aventus.WebComponent implements Aventus.DefaultComponent {

        //#region static

        //#endregion


        //#region props

        @Attribute()
        public active!: boolean;
        //#endregion


        //#region variables
        @ViewElement()
        protected contentEl!: HTMLDivElement;

        protected _tab!: T;
        public get tab(): T {
            return this._tab;
        }

        protected tabs!: Tabs<T>;
        //#endregion


        //#region constructor

        //#endregion


        //#region methods
        public init(tab: T, tabs: Tabs<T>) {
            this.tabs = tabs;

            let elements = tab.headerContent;
            if(elements.length == 0) {
                let lab = document.createElement("DIV");
                lab.classList.add("label");
                lab.innerHTML = tab.label;
                this.contentEl.appendChild(lab);
            }
            else {
                for(let el of elements) {
                    this.contentEl.appendChild(el);
                }
            }
            this._tab = tab;
        }

        protected addPress() {
            new Aventus.PressManager({
                element: this,
                onPress: () => {
                    if(!this.active) {
                        this.tabs.displayActive(this);
                    }
                }
            });
        }

        protected override postCreation(): void {
            super.postCreation();
            this.addPress();
        }
        //#endregion

    }
}