import { Table } from "../../Table.wcl.avt";
import { TableRow } from "../../rows/TableRow/TableRow.wcl.avt";

namespace Components {
    export abstract class TableCell<T, U = any> extends Aventus.WebComponent implements Aventus.DefaultComponent {

        //#region static

        //#endregion


        //#region props
        @Property()
        public grid!: boolean;
        @Property()
        public label?: string;
        //#endregion

        //#region variables
        @ViewElement()
        protected contentEl!: HTMLSpanElement;

        @ViewElement()
        protected labelEl!: HTMLDivElement;

        @ViewElement()
        protected resizeEl!: HTMLDivElement;

        public row?: TableRow<U>;
        public index: number = 0;
        public get table(): Table<U> {
            if(this.row && this.row.table) {
                return this.row.table;
            }
            throw 'Table can\'t be found for the cell';
        }
        /** The content displayed - used for global search */
        protected content: string = "";
        public data!: U;
        //#endregion


        //#region constructor

        //#endregion


        //#region methods
        public abstract setContent(data: T | undefined, rowData: U);

        protected addResize() {
            if(!this.resizeEl) {
                return;
            }
            let resizeEl = this.resizeEl;
            new Aventus.DragAndDrop({
                element: this.resizeEl,
                applyDrag: false,
                isDragEnable: () => this.table.col_resize ?? false,
                offsetDrag: 0,
                onMove: (e, position) => {
                    let newSize = position.x + resizeEl.offsetWidth;
                    this.table.setColWidth(newSize, this.index);
                }
            });
        }

        public globalSearch(search: string): boolean {
            return this.content.toLowerCase().includes(search);
        }

        public abstract sortAsc(cell: this): number;


        protected override postCreation(): void {
            this.addResize();
        }
        //#endregion

    }
}