import { ShortcutManager, SpecialTouch } from "../../../../libs/ShortcutManager.lib.avt";
import { GenericPopup } from "../GenericPopup/GenericPopup.wcl.avt";
import { Popup, type PopupInfo } from "../Popup/Popup.wcl.avt";

namespace Components {
    @Storybook({
        export: 'public',
        group: 'Components/Popup'
    })
    export interface ConfirmInfo extends PopupInfo {
        description: string,
        true_txt: string,
        false_txt: string,
    };

    @Storybook({
        export: 'public',
        group: 'Components/Popup'
    })
    export class Confirm extends GenericPopup<boolean, ConfirmInfo> implements Aventus.DefaultComponent {

        //#region static

        //#endregion


        //#region props

        //#endregion


        //#region variables
        //#endregion


        //#region constructor

        //#endregion


        //#region methods

        public override init(cb: (response: boolean) => void): void {
            super.init(cb);
            this.addShortcuts();
        }

        protected override close(): void {
            super.close();
            this.removeShortcuts();
        }

        /**
         * @inheritdoc
         */
        public override defaultOptions(): ConfirmInfo {
            return {
                title: "",
                description: "",
                true_txt: "Oui",
                false_txt: "Non",
            };
        }

        public addShortcuts() {
            ShortcutManager.subscribe(SpecialTouch.Enter, this.validate, { replaceTemp: true });
            ShortcutManager.subscribe(SpecialTouch.Escape, this.cancel, { replaceTemp: true });
        }

        public removeShortcuts() {
            ShortcutManager.unsubscribe(SpecialTouch.Enter, this.validate);
            ShortcutManager.unsubscribe(SpecialTouch.Escape, this.cancel);
        }

        /**
         * 
         */
        @BindThis()
        protected validate() {
            this.resolve(true);
        }

        @BindThis()
        protected override cancel(): void {
            this.resolve(false);
        }
        //#endregion

    }
}