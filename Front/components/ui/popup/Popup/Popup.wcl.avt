
namespace Components {

    export interface PopupInfo {
        title: string,
        max_width?: string,
        min_width?: string,
        max_height?: string,
        min_height?: string,
        hide_red_btn?: boolean,
        behind?: boolean;
    };

    export abstract class Popup<T, U extends PopupInfo> extends Aventus.WebComponent implements Aventus.DefaultComponent {

        //#region static

        //#endregion


        //#region props
        @Attribute()
        public no_red_btn!: boolean;
        @Attribute()
        public behind!: boolean;
        //#endregion


        //#region variables
        protected cb?: (response: T) => void;

        @Watch((target: Popup<T, U>, action: Aventus.WatchAction, path: string, value: any) => {
            target.onOptionsChanged();
        })
        protected info: U = this.defaultOptions();


        @ViewElement()
        protected popupEl!: HTMLDivElement;
        //#endregion


        //#region constructor

        //#endregion


        //#region methods
        public mergeInfo(info: Partial<U>) {
            this.info = { ...this.info, ...info };
        }
        /**
         * Define the callback
         */
        public init(cb: (response: T) => void) {
            this.cb = cb;
        }

        protected onOptionsChanged() {
            this.no_red_btn = this.info.hide_red_btn == true;
            this.behind = this.info.behind == true;
            this.popupEl.style.maxWidth = this.info.max_width ?? '';
            this.popupEl.style.maxHeight = this.info.max_height ?? '';
            this.popupEl.style.minWidth = this.info.min_width ?? '';
            this.popupEl.style.minHeight = this.info.min_height ?? '';
        }

        public abstract defaultOptions(): U;

        protected redPress() {
            this.remove();
        }
        //#endregion

    }
}