import { PermissionUser } from '../Data/PermissionUser.data.avt';
import { CoreRouter } from '../CoreRouter.lib.avt';

namespace Routes {

	export class PermissionUserRouter extends Aventus.HttpRoute {
		public constructor(router?: Aventus.HttpRouter) {
			super(router ?? new CoreRouter());
		}
		@BindThis()
		public async GetAllByUser(body: { userId: number } | FormData): Promise<AventusSharp.Tools.ResultWithError<PermissionUser[]>> {
			const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissionuser/byuser`, Aventus.HttpMethod.POST);
			request.setBody(body);
			type TypeResult = PermissionUser[];
			return await request.queryJSON<TypeResult>(this.router);
		}

		@BindThis()
		public async EditPermission(body: { created: PermissionUser[], updated: PermissionUser[], deleted: PermissionUser[] } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>> {
			const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissionuser/editpermission`, Aventus.HttpMethod.POST);
			request.setBody(body);
			type TypeResult = boolean;
			return await request.queryJSON<TypeResult>(this.router);
		}
	}

}