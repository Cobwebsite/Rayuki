import { PermissionGroup } from '../Data/PermissionGroup.data.avt';
import { CoreRouter } from '../CoreRouter.lib.avt';

namespace Routes {

	export class PermissionGroupRouter extends Aventus.HttpRoute {
		public constructor(router?: Aventus.HttpRouter) {
			super(router ?? new CoreRouter());
		}
		@BindThis()
		public async GetAllByGroup(body: { groupId: number } | FormData): Promise<AventusSharp.Tools.ResultWithError<PermissionGroup[]>> {
			const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissiongroup/bygroup`, Aventus.HttpMethod.POST);
			request.setBody(body);
			type TypeResult = PermissionGroup[];
			return await request.queryJSON<TypeResult>(this.router);
		}

		@BindThis()
		public async EditPermission(body: { created: PermissionGroup[], updated: PermissionGroup[], deleted: PermissionGroup[] } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>> {
			const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissiongroup/editpermission`, Aventus.HttpMethod.POST);
			request.setBody(body);
			type TypeResult = boolean;
			return await request.queryJSON<TypeResult>(this.router);
		}
	}

}