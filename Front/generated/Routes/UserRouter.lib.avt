import { User } from '../Data/User.data.avt';
import { CoreRouter } from '../CoreRouter.lib.avt';

namespace Routes {

	export class UserRouter extends AventusSharp.Routes.StorableRoute<User> {
		public constructor(router?: Aventus.HttpRouter) {
			super(router ?? new CoreRouter());
		}
		@BindThis()
		public override async GetAll(): Promise<AventusSharp.Tools.ResultWithError<User[]>> {
			const request = new Aventus.HttpRequest(`${this.getPrefix()}/${this.StorableName()}`, Aventus.HttpMethod.GET);
			type TypeResult = User[];
			return await request.queryJSON<TypeResult>(this.router);
		}

		@BindThis()
		public async GetConnected(): Promise<AventusSharp.Tools.ResultWithError<User>> {
			const request = new Aventus.HttpRequest(`${this.getPrefix()}/getconnected`, Aventus.HttpMethod.GET);
			type TypeResult = User;
			return await request.queryJSON<TypeResult>(this.router);
		}

		public StorableName() {
			return "User";
		}
	}

}