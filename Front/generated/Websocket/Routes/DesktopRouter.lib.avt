import { ApplicationOpenInfo } from '../../Data/ApplicationOpen.lib.avt';
import { DesktopAppIcon } from '../../Data/Desktop.data.avt';
import { MainEndPoint } from '../MainEndPoint.lib.avt';

namespace Websocket.Routes {

	export class DesktopRouter extends AventusSharp.WebSocket.Route {
		
		public events: {
			RegisterOpenApp: DesktopRouter_RegisterOpenApp,
			RemoveApp: DesktopRouter_RemoveApp,
			SetDesktopIcon: DesktopRouter_SetDesktopIcon,
			RemoveDesktopIcon: DesktopRouter_RemoveDesktopIcon,
		}
		
		public constructor(endpoint?: AventusSharp.WebSocket.EndPoint) {
			super(endpoint ?? MainEndPoint.getInstance());
			this.events = {
				RegisterOpenApp: new DesktopRouter_RegisterOpenApp(this.endpoint, this.getPrefix),
				RemoveApp: new DesktopRouter_RemoveApp(this.endpoint, this.getPrefix),
				SetDesktopIcon: new DesktopRouter_SetDesktopIcon(this.endpoint, this.getPrefix),
				RemoveDesktopIcon: new DesktopRouter_RemoveDesktopIcon(this.endpoint, this.getPrefix),
			};
			
			for(let key in this.events) {
				this.events[key].init();
			}
		}

		public async RegisterOpenApp(body: { appInfo: ApplicationOpenInfo } | FormData, options: AventusSharp.WebSocket.WsRouteSendOptions = {}): Promise<AventusSharp.ExtractResponse<DesktopRouter_RegisterOpenApp>> {
			const info: AventusSharp.WebSocket.SocketSendMessageOptions = {
				channel: `${this.getPrefix()}/desktop/RegisterOpenApp`,
				body: body,
				...options,
			};
			return await this.endpoint.sendMessageAndWait<AventusSharp.ExtractResponse<DesktopRouter_RegisterOpenApp>>(info);
		}

		public async RemoveApp(body: { appInfo: ApplicationOpenInfo } | FormData, options: AventusSharp.WebSocket.WsRouteSendOptions = {}): Promise<AventusSharp.ExtractResponse<DesktopRouter_RemoveApp>> {
			const info: AventusSharp.WebSocket.SocketSendMessageOptions = {
				channel: `${this.getPrefix()}/desktop/RemoveApp`,
				body: body,
				...options,
			};
			return await this.endpoint.sendMessageAndWait<AventusSharp.ExtractResponse<DesktopRouter_RemoveApp>>(info);
		}

		public async SetDesktopIcon(body: { icon: DesktopAppIcon } | FormData, options: AventusSharp.WebSocket.WsRouteSendOptions = {}): Promise<AventusSharp.ExtractResponse<DesktopRouter_SetDesktopIcon>> {
			const info: AventusSharp.WebSocket.SocketSendMessageOptions = {
				channel: `${this.getPrefix()}/desktop/SetDesktopIcon`,
				body: body,
				...options,
			};
			return await this.endpoint.sendMessageAndWait<AventusSharp.ExtractResponse<DesktopRouter_SetDesktopIcon>>(info);
		}

		public async RemoveDesktopIcon(body: { icon: DesktopAppIcon } | FormData, options: AventusSharp.WebSocket.WsRouteSendOptions = {}): Promise<AventusSharp.ExtractResponse<DesktopRouter_RemoveDesktopIcon>> {
			const info: AventusSharp.WebSocket.SocketSendMessageOptions = {
				channel: `${this.getPrefix()}/desktop/RemoveDesktopIcon`,
				body: body,
				...options,
			};
			return await this.endpoint.sendMessageAndWait<AventusSharp.ExtractResponse<DesktopRouter_RemoveDesktopIcon>>(info);
		}
	}
	 
	export class DesktopRouter_RegisterOpenApp extends AventusSharp.WebSocket.Event<ApplicationOpenInfo> {
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `${this.getPrefix()}/desktop/RegisterOpenApp`;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override listenOnBoot(): boolean {
			return true;
		}
	}
	 
	export class DesktopRouter_RemoveApp extends AventusSharp.WebSocket.Event<ApplicationOpenInfo> {
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `${this.getPrefix()}/desktop/RemoveApp`;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override listenOnBoot(): boolean {
			return true;
		}
	}
	 
	export class DesktopRouter_SetDesktopIcon extends AventusSharp.WebSocket.Event<DesktopAppIcon> {
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `${this.getPrefix()}/desktop/SetDesktopIcon`;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override listenOnBoot(): boolean {
			return true;
		}
	}
	 
	export class DesktopRouter_RemoveDesktopIcon extends AventusSharp.WebSocket.Event<boolean> {
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `${this.getPrefix()}/desktop/RemoveDesktopIcon`;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override listenOnBoot(): boolean {
			return true;
		}
	}

}