$tablet-breakpoint: 1224px;
$mobile-breakpoint: 768px;

$size-breakpoints: (
	"xs": 300,
	"sm": 540,
	"md": 720,
	"lg": 960,
	"xl": 1140
);

$colors: (
	'primary',
	'secondary',
	'green',
	'success',
	'red',
	'error',
	'orange',
	'warning',
	'blue',
	'information'
);

@mixin tablet {
	@media screen and (max-width:$tablet-breakpoint) {
		@content;
	}
}
@mixin tablet-portrait {
	@media screen and (max-width:$tablet-breakpoint) and (orientation:portrait) {
		@content;
	}
}
@mixin tablet-landscape {
	@media screen and (max-width:$tablet-breakpoint) and (orientation:landscape) {
		@content;
	}
}

@mixin mobile {
	@media screen and (max-width:$mobile-breakpoint) {
		@content;
	}
}

@mixin mobile-portrait {
	@media screen and (max-width:$mobile-breakpoint) and (orientation:portrait) {
		@content;
	}
}
@mixin mobile-landscape {
	@media screen and (max-width:$mobile-breakpoint) and (orientation:landscape) {
		@content;
	}
}

@mixin desktop {
	@media screen and (min-width:#{$tablet-breakpoint + 1}) {
		@content;
	}
}

@mixin desktop-portrait {
	@media screen and (min-width:#{$tablet-breakpoint + 1}) and (orientation:portrait) {
		@content;
	}
}
@mixin desktop-landscape {
	@media screen and (min-width:#{$tablet-breakpoint + 1}) and (orientation:landscape) {
		@content;
	}
}

@mixin portrait {
	@media screen and (orientation:portrait) {
		@content;
	}
}

@mixin landscape {
	@media screen and (orientation:landscape) {
		@content;
	}
}

@mixin eachSize {
	@each $name, $size in $size-breakpoints {
		@container application (max-width: #{$size+'px'}) {
			@content;
		}
	}

}

@mixin application-xs {
	$sizeTemp: map-get($map: $size-breakpoints, $key: "xs");

	@container application (max-width: #{$sizeTemp+'px'}) {
		@content;
	}
}

@mixin application-sm {
	$sizeTemp: map-get($map: $size-breakpoints, $key: "sm");

	@container application (max-width: #{$sizeTemp+'px'}) {
		@content;
	}
}

@mixin application-md {
	$sizeTemp: map-get($map: $size-breakpoints, $key: "md");

	@container application (max-width: #{$sizeTemp+'px'}) {
		@content;
	}
}

@mixin application-lg {
	$sizeTemp: map-get($map: $size-breakpoints, $key: "lg");

	@container application (max-width: #{$sizeTemp+'px'}) {
		@content;
	}
}

@mixin application-xl {
	$sizeTemp: map-get($map: $size-breakpoints, $key: "xl");

	@container application (max-width: #{$sizeTemp+'px'}) {
		@content;
	}
}

@mixin eachColor {
	@each $color in $colors {
		@content($color);
	}
}
