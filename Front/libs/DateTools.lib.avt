namespace Lib {
    export class DateTools {
        public static isSameDate(date1?: Date, date2?: Date) {
            if(date1 == null && date2 == null) return true;
            if(date1 == null || date2 == null) return false;
            return date1.getDate() == date2.getDate() && date1.getMonth() == date2.getMonth() && date1.getFullYear() == date2.getFullYear();
        }

        public static print(date: Date, options?: Intl.DateTimeFormatOptions | undefined, locale?: string) {
            if(!options) {
                options = {
                    year: "numeric",
                    month: "long",
                    day: "2-digit"
                };
            }
            return date.toLocaleDateString(locale, options);
        }

        private static _localMonths: string[] = [];
        public static getMonthsName(): string[] {
            if(this._localMonths.length == 0) {
                for(let i = 0; i < 12; i++) {
                    this._localMonths.push(this.print(new Date(2024, i, 15), { month: "long" }));
                }
            }
            return this._localMonths;
        }
    }
}