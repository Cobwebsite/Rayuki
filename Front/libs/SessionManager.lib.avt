import { UserRAM, type UserExtended } from "../ram/User.ram.avt";
import { LoginCode, LoginError } from "../generated/Logic/PasswordManager.lib.avt";
import { MainRouter } from "../generated/Routes/MainRouter.lib.avt";
import { Permission } from "./Permission.lib.avt";


namespace Lib {
    @Storybook({
        export: 'protected'
    })
    export class SessionManager {

        public static async logout() {
            try {
                await new MainRouter().Logout();
                Permission.clear();
            } catch { }
            window.location.reload();
        }
        public static getUserId(): number {
            return userIdConnected;
        }
        public static async getUser(): Promise<Aventus.RamItem<UserExtended> | undefined> {
            let result = await UserRAM.getInstance().getConnected();
            if(result.containsCode(LoginCode.NotConnected, LoginError)) {
                this.logout();
            }
            else if(!result.success) {

            }
            return result.result;
        }
    }
}